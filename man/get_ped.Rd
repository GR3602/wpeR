% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_ped.R
\name{get_ped}
\alias{get_ped}
\title{Organizes Pedigree Data}
\usage{
get_ped(ped, sampledata, out = "FamAgg")
}
\arguments{
\item{ped}{Data frame. Pedigree data frame with the most basic structure.
Three columns corresponding to offspring (has to be named \code{OffspringID}), father
(has to be named \code{FatherID}), mother (has to be named \code{MotherID}) and family
(has to be named \code{ClusterIndex}). Unknown parents should be represented by \code{NA} values.}

\item{sampledata}{Data frame. Metadata for all genetic samples that belong
to the individuals included in pedigree reconstruction analysis.
Must have \verb{$Sample} with sample names and \verb{$GeneticSex} coded as \code{M/F/NA}}

\item{out}{Character string. For use with which package should the output be formatted?
\code{kinship2} (out = "kinship2"), \code{pedtools} (out = "pedtools") or
\code{FamAgg} (out = "FamAgg"). Defaults to "FamAgg"}
}
\value{
A data frame describing a common pedigree structure. Each individual included in
pedigree represents one row. Columns describe individual identifier code, identifier code for
mother and father and sex of individual. Column names and arrangement depends on selected
output (\code{out} parameter).
}
\description{
\code{get_ped()} offers an alternative to \code{\link[=get_colony]{get_colony()}} function in cases where the pedigree
was not reconstructed with \href{https://www.zsl.org/about-zsl/resources/software/colony}{COLONY 2}
software. It takes a pedigree dataframe and assigns sex to each individual.
The function also prepares data so that the output of the function can be directly analysed with
\href{https://cran.r-project.org/web/packages/kinship2/index.html}{\code{kinship2}},
\href{https://cran.r-project.org/web/packages/pedtools/index.html}{\code{pedtools}} or
\href{https://bioconductor.org/packages/release/bioc/html/FamAgg.html}{\code{FamAgg}} packages.
}
\examples{
#example pedigree dataframe
ped <- data.frame(
  OffspringID = c(
    "M273P", "M20AM", "M2757", "M2ALK", "M2ETE", "M2EUJ", "MSV00E",
    "MSV018", "MSV05L", "MSV0M6", "MSV0T4", "MSV0T7", "MSV0TJ", "MSV0UL"
  ),
  FatherID = c(
    NA, NA, "M20AM", "M20AM", "M20AM", "M20AM", "M20AM",
    "M20AM", "M20AM", "M20AM", "M20AM", "M20AM", "M20AM", "M20AM"
  ),
  MotherID = c(
    NA, NA, "M273P", "M273P", "M273P", "M273P", "M273P",
    "M273P", "M273P", "M273P", "M273P", "M273P", "M273P", "M273P"
  ),
  ClusterIndex = c(rep(1, 14))
)
#Get pedigree data in FamAgg format
get_ped(ped, wolf_samples)

}
